<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>000. Hello World - 用Github pages和Hexo搭建自己的个人主页</title>
    <url>/2022/02/24/000-hello-world/</url>
    <content><![CDATA[<p><strong>Hello world</strong><br>欢迎来到我的博客，我是Kennan，一名计算机专业的研究生。以前在不同的地方写一些文章博客，但会受到平台的各种限制和广告。<br>这里在前辈的指导下，通过 <a href="https://docs.github.com/en/pages">github pages平台</a> 和 <a href="https://hexo.io/">Hexo博客框架</a> 搭建了一个自己的个人主页，在上面分享一些自己的经历和学习心得。<br>下面记录一下我的搭建过程，请多多指教，一些相关文件可参考我的 <a href="https://github.com/KennanYang/KennanYang.github.io">KennanYang.github.io</a> 项目</p>
<span id="more"></span>
<h2 id="1-搭建Hexo"><a href="#1-搭建Hexo" class="headerlink" title="1.搭建Hexo"></a>1.搭建Hexo</h2><p><a href="https://hexo.io/">Hexo</a>是基于Node.js写的，也需要git管理文章上传到github，所以需要先安装git和nodeJS</p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a><br>linux: </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>

<p>使用<code>git --version</code>查看是否安装正确</p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>windows：<a href="https://nodejs.org/en/">Node.js官网</a>选择LTS版本（稳定版）。</p>
<p>linux：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure>
<p>使用<code>node -v</code>和<code>npm -v</code>查看是否安装正确</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>创建一个文件夹【filename】(我的叫 hexoblog)，然后<code>cd</code>到这个文件夹下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>用<code>hexo -v</code>查看一下版本</p>
<p>至此，安装完毕，开始配置Hexo项目</p>
<h3 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h3><p>初始化Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init hexoblog</span><br><span class="line"><span class="built_in">cd</span> hexoblog //进入这个hexoblog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>然后就可以查看官方的demo了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate //产生网页，可缩写hexo g</span><br><span class="line">hexo server //挂到本地服务器打开，可缩写hexo s</span><br></pre></td></tr></table></figure>

<p>在浏览器输入localhost:4000就可以看到你生成的博客，官方默认主题是landscope</p>
<h2 id="2-部署到github-pages"><a href="#2-部署到github-pages" class="headerlink" title="2.部署到github pages"></a>2.部署到github pages</h2><p>直接在github page平台上托管我们的博客，便于维护，下面是把Hexo搭好的博客部署到github pages的配置方式。</p>
<h3 id="注册github，新建repo"><a href="#注册github，新建repo" class="headerlink" title="注册github，新建repo"></a>注册github，新建repo</h3><p>新建一个自己用户名命名的仓库，后面加.github.io，像我这样，其他设置默认就好，点击create repository。<br><img src="https://img-blog.csdnimg.cn/c5bdfacd70c94789bcbe12c7a1c01da9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="创建repo"></p>
<h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>回到你的git bash中，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后创建SSH,一路回车</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。<br><img src="https://img-blog.csdnimg.cn/1b4a2ce586c5423c91354dd38ecee893.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="ssh密钥"><br>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。<br><img src="https://img-blog.csdnimg.cn/51f61bbe5dc64632be0158105eb15d3b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_11,color_FFFFFF,t_70,g_se,x_5" alt="github-&gt;settings"></p>
<p>而后在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code>把你的<code>id_rsa.pub</code>里面的信息复制进去。<br><img src="https://img-blog.csdnimg.cn/b3cb64a9604946a38fc3f8bd85ce4f6a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>在gitbash中，查看是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<h3 id="部署Hexo到github"><a href="#部署Hexo到github" class="headerlink" title="部署Hexo到github"></a>部署Hexo到github</h3><p>打开站点配置文件 _config.yml，翻到最后，修改为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 是生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>
<p>注意deploy时可能要你输入username和password。</p>
<p>部署后需要<strong>等待一段时间</strong>，然后就可以在<code>http://yourname.github.io</code>看到Hexo 博客了，这里的内容和<code>hexo server</code>生成的内容完全相同。</p>
<h2 id="3-绑定个人域名"><a href="#3-绑定个人域名" class="headerlink" title="3.绑定个人域名"></a>3.绑定个人域名</h2><p>完成上面的步骤后，可以使用<code>http://yourname.github.io</code>查看个人主页，如何自定义一个属于自己的域名呢？</p>
<h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>注册一个<a href="https://www.aliyun.com/?spm=5176.100251.top-nav.dlogo.5af94f152mfbDz">阿里云账户</a>,在阿里云上买一个域名，我买的是<code>kennan-yang.top</code></p>
<p>先实名认证，然后在域名控制台添加解析，这里需要<strong>等半天时间</strong>。<br><img src="https://img-blog.csdnimg.cn/05356c75bdfa48d593e1789995afe188.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="域名解析"><br>登录GitHub，进入之前创建的仓库<code>yourname.github.io</code>，点击<code>settings-&gt;pages</code>，设置<code>Custom domain</code>，输入你的域名<code>kennan-yang.top</code> 并<code>save</code>。<br><img src="https://img-blog.csdnimg.cn/4ca6ad5c655b4eaab7f534ed8cc78ab7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiN6LSwS2VubmFu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="Custom domain"></p>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>然后在你的博客文件夹（如我的hexoblog）的<code>source</code>目录中创建一个名为<code>CNAME</code>文件，不要后缀。写上你的域名。<br><img src="https://img-blog.csdnimg.cn/e26efd4edb2a4772a54ded2542a28b14.png" alt="CNAME"><br>然后就是最常用的下面几条命令，当配置完成之后进行这些操作即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清理缓存</span></span><br><span class="line">hexo g <span class="comment"># hexo generate 生成静态页</span></span><br><span class="line">hexo s <span class="comment"># hexo server 本地预览（非必须）</span></span><br><span class="line">hexo d <span class="comment"># hexo deploy 部署到github pages</span></span><br></pre></td></tr></table></figure>
<p>部署完成后就可以用你的域名打开自己的博客啦！</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>Hexo还有更多不同的主题和配置，可参考下面的资料进行个性化设置。</p>
<ol>
<li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">CSDN: hexo史上最全搭建教程</a></li>
<li><a href="https://docs.github.com/en/pages">github pages</a> </li>
<li><a href="https://hexo.io/">Hexo官方文档</a></li>
<li><a href="https://shen-yu.gitee.io/">Hexo的岛主题</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>002. win10安装python3.9.1+cuda11.1+cudnn+pytorch+opencv记录</title>
    <url>/2022/02/24/002-config-pytorch/</url>
    <content><![CDATA[<p>最近由于机器学习大作业需要用到神经网络，记录一下配置环境的过程。<br>前人铺路，我只是结合自己的环境做了一个简单的总结，写的不好多多见谅。</p>
<span id="more"></span>
<h1 id="1-安装python3-9"><a href="#1-安装python3-9" class="headerlink" title="1.安装python3.9"></a>1.安装python3.9</h1><p>首先是python的安装，选用当前时间最新版的python3.9.1<br>官网下载安装包即可<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a><br><img src="https://img-blog.csdnimg.cn/20201219134620158.png"></p>
<p>一路“下一步”，建议安装到默认路径。</p>
<p>然后，配置环境变量：<br>找到安装的位置，把图中所示的两个路径加入环境变量。<br>我的路径是：<br>C:\Users\Administrator\AppData\Local\Programs\Python\Python39<br>C:\Users\Administrator\AppData\Local\Programs\Python\Python39\Scripts<br><img src="https://img-blog.csdnimg.cn/20201219134237283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"><br>补充一点：<br>conda里python中的pytorch比较老，遇到没法调用的问题（这里没有深究），所以没有用anaconda，而是直接官网找最新的python。</p>
<h1 id="2-安装cuda（需要vs环境，我的是vs2015）"><a href="#2-安装cuda（需要vs环境，我的是vs2015）" class="headerlink" title="2.安装cuda（需要vs环境，我的是vs2015）"></a>2.安装cuda（需要vs环境，我的是vs2015）</h1><p>CUDA（Compute Unified Device Architecture），是显卡厂商NVIDIA推出的运算平台。</p>
<p>我当前的环境是vs2015，电脑配置是</p>
<p><img src="https://img-blog.csdnimg.cn/20201219142426303.png"><br><img src="https://img-blog.csdnimg.cn/20201219142440290.png"><br>注意CUDA的版本不能超过GPU的版本。</p>
<p>官网的CUDA安装路径如下：<br><a href="https://developer.nvidia.com/zh-cn/cuda-downloads">https://developer.nvidia.com/zh-cn/cuda-downloads</a><br><img src="https://img-blog.csdnimg.cn/20201219142239715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"><br>圈出来的部分，前者是一个比较大的安装包，下载到本地安装，后者是很小的安装包，但是需要联网，我选的前者。<br><img src="https://img-blog.csdnimg.cn/20201219142349445.png"></p>
<p>仍然选择当前最新的版本11.1，安装到默认路径下：<br>C:\Program Files\NVIDIA GPU Computing Toolkit</p>
<h1 id="3-安装cudnn（版本和cuda对应，更老的版本也可以但不建议）"><a href="#3-安装cudnn（版本和cuda对应，更老的版本也可以但不建议）" class="headerlink" title="3.安装cudnn（版本和cuda对应，更老的版本也可以但不建议）"></a>3.安装cudnn（版本和cuda对应，更老的版本也可以但不建议）</h1><p>NVIDIA cuDNN是用于深度神经网络的GPU加速库。<br>老规矩，走官网。<br><a href="https://developer.nvidia.com/rdp/cudnn-archive">https://developer.nvidia.com/rdp/cudnn-archive</a><br><img src="https://img-blog.csdnimg.cn/20201219140906756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"></p>
<p>这里的下载需要注册，有个技巧是复制链接，在迅雷打开可以直接下载。<br><img src="https://img-blog.csdnimg.cn/20201219135916291.png"></p>
<p>下载好的压缩包解压之后，会发现三个文件夹。<br>分别把文件放到cuda路径对应的文件夹下。<br><img src="https://img-blog.csdnimg.cn/20201219135443329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"></p>
<h1 id="4-安装pytorch"><a href="#4-安装pytorch" class="headerlink" title="4.安装pytorch"></a>4.安装pytorch</h1><p>它是一个基于Python的可续计算包，提供两个高级功能：1、具有强大的GPU加速的张量计算（如NumPy）。2、包含自动求导系统的深度神经网络。<br>官网：<br><a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a><br><img src="https://img-blog.csdnimg.cn/20201219140414305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"><br>可以通过pip安装，最下面的命令行在cmd中打开即可。<br>由于速度慢，所以直接从别人那里拷贝过来了。</p>
<p>可以在python中通过下面的代码来检验，True表示pytorch的cuda配置成功<br><img src="https://img-blog.csdnimg.cn/20201219142901202.png"></p>
<h1 id="5-安装opencv"><a href="#5-安装opencv" class="headerlink" title="5.安装opencv"></a>5.安装opencv</h1><p>方法一：<br>打开cmd，输入<code>pip install opencv-python</code>即可，但超级慢还可能断开连接。<br>此处建议清华镜像下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install opencv-python -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</span><br></pre></td></tr></table></figure>

<p>方法二：<br>下载相应Python版本的OpenCV的whl文件<br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv">https://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv</a><br>然后打开cmd，在whl文件对应文件夹路径下，使用pip安装，如<br><img src="https://img-blog.csdnimg.cn/20201219141255475.png"></p>
<h2 id="至此我需要的环境已经配置完成。"><a href="#至此我需要的环境已经配置完成。" class="headerlink" title="至此我需要的环境已经配置完成。"></a>至此我需要的环境已经配置完成。</h2>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>001. 如何连接实验室的服务器进行网络训练？</title>
    <url>/2022/02/24/001-link-to-server/</url>
    <content><![CDATA[<p>我在用电脑训练CNN时遇到了性能瓶颈（显存不够），当得知实验室的服务器算力更强时，去请教师兄怎么连。</p>
<p>实验室的师兄甩过来服务器的ip和用户名密码，说直接连就行。</p>
<p>直接连？linux都不太会用的小白，咋连？</p>
<p>首先确保连接到实验室的网络，我这边是用校园网或者挂校园网的VPN，然后有下面几种配置方法（方法应该很多，只是列出了我尝试过的这三种）：</p>
<span id="more"></span>
<h1 id="方法一：wsl（Windows-Subsystem-for-Linux）"><a href="#方法一：wsl（Windows-Subsystem-for-Linux）" class="headerlink" title="方法一：wsl（Windows Subsystem for Linux）"></a>方法一：wsl（Windows Subsystem for Linux）</h1><p>1.下载wsl2<br>参考<br><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10</a></p>
<p>2.下载windows终端windows terminal（非必须，也可直接用power shell）<br><a href="https://docs.microsoft.com/zh-cn/windows/terminal/get-started">https://docs.microsoft.com/zh-cn/windows/terminal/get-started</a></p>
<p>3.使用ssh命令进行外部链接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-&gt; ssh 用户@ip</span><br><span class="line">-&gt; 密码</span><br></pre></td></tr></table></figure>

<h1 id="方法二：vscode"><a href="#方法二：vscode" class="headerlink" title="方法二：vscode"></a>方法二：vscode</h1><p>1.vscode下载remote-ssh和remote wsl<br><img src="https://img-blog.csdnimg.cn/20210519110928571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"></p>
<p>2.连接服务器</p>
<p>选择左下角的标志<br><img src="https://img-blog.csdnimg.cn/20210519111221622.png"><br>会弹出一个菜单栏，选择Connect to Host…，输入用户名和密码即可<br><img src="https://img-blog.csdnimg.cn/20210519111159132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODA1NTk3,size_16,color_FFFFFF,t_70"></p>
<h1 id="方法三（推荐）：使用终端模拟器XShell和XFtp，学校和家庭有免费版"><a href="#方法三（推荐）：使用终端模拟器XShell和XFtp，学校和家庭有免费版" class="headerlink" title="方法三（推荐）：使用终端模拟器XShell和XFtp，学校和家庭有免费版"></a>方法三（推荐）：使用终端模拟器XShell和XFtp，学校和家庭有免费版</h1><p><a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a><br><img src="https://img-blog.csdnimg.cn/2021051911143257.png"></p>
<p>XShell用来输入指令</p>
<p>XFtp方便文件管理和传输</p>
<p>当连接完成之后，就可以把使用GPU的网络训练代码放在服务器上跑了。。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
